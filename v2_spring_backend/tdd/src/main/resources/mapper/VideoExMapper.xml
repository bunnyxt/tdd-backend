<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bunnyxt.tdd.dao.VideoExDao">
    <resultMap id="BaseResultMap" type="com.bunnyxt.tdd.model.VideoEx">
        <id column="id" property="id" />
        <result column="added" property="added" />
        <result column="aid" property="aid" />
        <result column="bvid" property="bvid" />
        <result column="videos" property="videos" />
        <result column="tid" property="tid" />
        <result column="tname" property="tname" />
        <result column="copyright" property="copyright" />
        <result column="pic" property="pic" />
        <result column="title" property="title" />
        <result column="pubdate" property="pubdate" />
        <result column="description" property="desc" />
        <result column="tags" property="tags" />
        <result column="mid" property="mid" />
        <result column="code" property="code" />
        <result column="v_attribute" property="attribute" />
        <result column="state" property="state" />
        <result column="forward" property="forward" />
        <result column="hasstaff" property="hasstaff" />
        <result column="singer" property="singer" />
        <result column="solo" property="solo" />
        <result column="original" property="original" />
        <result column="employed" property="employed" />
        <result column="isvc" property="isvc" />
        <result column="engine" property="engine" />
        <result column="freq" property="freq" />
        <result column="activity" property="activity" />
        <result column="recent" property="recent" />
        <association property="member" javaType="com.bunnyxt.tdd.model.fragment.MemberFragment">
            <result column="sex" property="sex" />
            <result column="name" property="name" />
            <result column="face" property="face" />
            <result column="sign" property="sign" />
        </association>
        <association property="laststat" javaType="com.bunnyxt.tdd.model.fragment.VideoRecordFragment">
            <result column="r_added" property="added" />
            <result column="view" property="view" />
            <result column="danmaku" property="danmaku" />
            <result column="reply" property="reply" />
            <result column="favorite" property="favorite" />
            <result column="coin" property="coin" />
            <result column="share" property="share" />
            <result column="like" property="like" />
            <result column="dislike" property="dislike" />
            <result column="now_rank" property="now_rank" />
            <result column="his_rank" property="his_rank" />
            <result column="vt" property="vt" />
            <result column="vv" property="vv" />
        </association>
        <collection column="aid" property="staff" ofType="com.bunnyxt.tdd.model.VideoStaffEx" select="queryVideoStaffsByAid" />
    </resultMap>

    <sql id="BaseColumnList">
        v.id, v.added, v.bvid, v.aid, v.videos, v.tid, v.tname, v.copyright, v.pic, v.title, v.pubdate, v.`desc` description, v.tags, v.mid,
        v.code,v.`attribute` v_attribute, v.state, v.forward, v.hasstaff, v.singer, v.solo, v.original, v.employed, v.isvc, v.engine, v.freq, v.activity, v.recent,
        m.sex, m.name, m.face, m.sign,
        r.added r_added, r.view, r.danmaku, r.reply, r.favorite, r.coin, r.share, r.like, r.dislike, r.now_rank, r.his_rank, r.vt, r.vv
    </sql>

    <resultMap id="VideoStaffExResultMap" type="com.bunnyxt.tdd.model.VideoStaffEx">
        <result column="mid" property="mid" />
        <result column="name" property="name" />
        <result column="face" property="face" />
        <result column="title" property="title" />
    </resultMap>

    <select id="queryVideoStaffsByAid" resultMap="VideoStaffExResultMap" parameterType="Long">
        select
        a.mid, b.name, b.face, a.title
        from
        tdd_video_staff a
        join
        tdd_member b
        on
        a.mid = b.mid
        where
        aid = #{aid}
    </select>

    <select id="queryVideoByAid" resultMap="BaseResultMap" parameterType="Long">
        select
        <include refid="BaseColumnList" />
        from
        tdd_video as v
        left join
        tdd_member as m
        on
        v.mid = m.mid
        left join
        tdd_video_record as r
        on
        v.laststat = r.id
        where
        v.aid = #{aid}
    </select>

    <select id="queryVideos" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList" />
        from
        tdd_video as v
        left join
        tdd_member as m
        on
        v.mid = m.mid
        left join
        tdd_video_record as r
        on
        v.laststat = r.id
        <where>
            <if test="vc == 1">
                and (v.isvc = 1 or v.isvc = 2)
            </if>
            <if test="start_ts > 0">
                and v.pubdate >= #{start_ts}
            </if>
            <if test="end_ts > 0">
                and v.pubdate &lt;= #{end_ts}
            </if>
            <if test="activity >= 0 and activity &lt;= 2">
                and v.activity = #{activity}
            </if>
            <if test="recent >= 0 and recent &lt;= 2">
                and v.recent = #{recent}
            </if>
            <if test="title != null and title.length() > 0">
                and INSTR(lower(v.title), lower(#{title}))
            </if>
            <if test="up != null and up.length() > 0">
                and INSTR(lower(m.name), lower(#{up}))
            </if>
        </where>
        order by
        ${order_by}
        <if test="desc == 1">
            desc
        </if>
        limit
        #{offset}, #{ps}
    </select>

    <select id="queryVideosCount" resultType="Integer">
        select
        count(1)
        from
        tdd_video as v
        left join
        tdd_member as m
        on
        v.mid = m.mid
        left join
        tdd_video_record as r
        on
        v.laststat = r.id
        <where>
            <if test="vc == 1">
                and (v.isvc = 1 or v.isvc = 2)
            </if>
            <if test="start_ts > 0">
                and v.pubdate >= #{start_ts}
            </if>
            <if test="end_ts > 0">
                and v.pubdate &lt;= #{end_ts}
            </if>
            <if test="activity >= 0 and activity &lt;= 2">
                and v.activity = #{activity}
            </if>
            <if test="recent >= 0 and recent &lt;= 2">
                and v.recent = #{recent}
            </if>
            <if test="title != null and title.length() > 0">
                and INSTR(lower(v.title), lower(#{title}))
            </if>
            <if test="up != null and up.length() > 0">
                and INSTR(lower(m.name), lower(#{up}))
            </if>
        </where>
    </select>

    <select id="queryVideosByMid" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList" />
        from
        tdd_video as v
        left join
        tdd_member as m
        on
        v.mid = m.mid
        left join
        tdd_video_record as r
        on
        v.laststat = r.id
        where
        v.aid in (
        select
        distinct(v.aid)
        from
        tdd_video v
        left join
        tdd_video_staff s
        on
        v.aid = s.aid
        where
        v.mid = #{mid} || s.mid = #{mid}
        )
        order by
        ${order_by}
        <if test="desc == 1">
            desc
        </if>
        limit
        #{offset}, #{ps}
    </select>

    <select id="queryVideosByMidCount" resultType="Integer">
        select
        count(distinct(v.aid))
        from
        tdd_video v
        left join
        tdd_video_staff s
        on
        v.aid = s.aid
        where
        v.mid = #{mid} || s.mid = #{mid}
    </select>

</mapper>